# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/base_rbt',
                'doc_host': 'https://hamish-haggerty.github.io',
                'git_url': 'https://github.com/hamish-haggerty/base_rbt',
                'lib_path': 'base_rbt'},
  'syms': { 'base_rbt.all': {},
            'base_rbt.base_lf': { 'base_rbt.base_lf.C_z1z2': ('base_lf.html#c_z1z2', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Cdiff_Sup': ('base_lf.html#cdiff_sup', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Cdiff_Sup.__call__': ('base_lf.html#cdiff_sup.__call__', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Cdiff_Sup.__init__': ('base_lf.html#cdiff_sup.__init__', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Cdiff_Sup.inner_step': ('base_lf.html#cdiff_sup.inner_step', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Max_Corr': ('base_lf.html#max_corr', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Max_Corr.__init__': ('base_lf.html#max_corr.__init__', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.Max_Corr.forward': ('base_lf.html#max_corr.forward', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.random_sinusoid': ('base_lf.html#random_sinusoid', 'base_rbt/base_lf.py'),
                                  'base_rbt.base_lf.seed_everything': ('base_lf.html#seed_everything', 'base_rbt/base_lf.py')},
            'base_rbt.base_model': { 'base_rbt.base_model.BarlowTrainer': ('base_model.html#barlowtrainer', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer.__init__': ( 'base_model.html#barlowtrainer.__init__',
                                                                                     'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer._get_training_cbs': ( 'base_model.html#barlowtrainer._get_training_cbs',
                                                                                              'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer.bt_learning': ( 'base_model.html#barlowtrainer.bt_learning',
                                                                                        'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer.bt_transfer_learning': ( 'base_model.html#barlowtrainer.bt_transfer_learning',
                                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer.continue_bt_learning': ( 'base_model.html#barlowtrainer.continue_bt_learning',
                                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer.setup_learn': ( 'base_model.html#barlowtrainer.setup_learn',
                                                                                        'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTrainer.train': ( 'base_model.html#barlowtrainer.train',
                                                                                  'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins': ('base_model.html#barlowtwins', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins.__init__': ( 'base_model.html#barlowtwins.__init__',
                                                                                   'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins.before_batch': ( 'base_model.html#barlowtwins.before_batch',
                                                                                       'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins.before_epoch': ( 'base_model.html#barlowtwins.before_epoch',
                                                                                       'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins.before_fit': ( 'base_model.html#barlowtwins.before_fit',
                                                                                     'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins.lf': ('base_model.html#barlowtwins.lf', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwins.show': ('base_model.html#barlowtwins.show', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwinsModel': ('base_model.html#barlowtwinsmodel', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwinsModel.__init__': ( 'base_model.html#barlowtwinsmodel.__init__',
                                                                                        'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwinsModel.__str__': ( 'base_model.html#barlowtwinsmodel.__str__',
                                                                                       'base_rbt/base_model.py'),
                                     'base_rbt.base_model.BarlowTwinsModel.forward': ( 'base_model.html#barlowtwinsmodel.forward',
                                                                                       'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomCenterDropout': ( 'base_model.html#randomcenterdropout',
                                                                                  'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomCenterDropout.__init__': ( 'base_model.html#randomcenterdropout.__init__',
                                                                                           'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomCenterDropout._apply_dropout': ( 'base_model.html#randomcenterdropout._apply_dropout',
                                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomCenterDropout.forward': ( 'base_model.html#randomcenterdropout.forward',
                                                                                          'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomGaussianBlur': ( 'base_model.html#randomgaussianblur',
                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomGaussianBlur.__init__': ( 'base_model.html#randomgaussianblur.__init__',
                                                                                          'base_rbt/base_model.py'),
                                     'base_rbt.base_model.RandomGaussianBlur.encodes': ( 'base_model.html#randomgaussianblur.encodes',
                                                                                         'base_rbt/base_model.py'),
                                     'base_rbt.base_model.SaveBarlowLearnerCheckpoint': ( 'base_model.html#savebarlowlearnercheckpoint',
                                                                                          'base_rbt/base_model.py'),
                                     'base_rbt.base_model.SaveBarlowLearnerCheckpoint.__init__': ( 'base_model.html#savebarlowlearnercheckpoint.__init__',
                                                                                                   'base_rbt/base_model.py'),
                                     'base_rbt.base_model.SaveBarlowLearnerCheckpoint.after_epoch': ( 'base_model.html#savebarlowlearnercheckpoint.after_epoch',
                                                                                                      'base_rbt/base_model.py'),
                                     'base_rbt.base_model.SaveBarlowLearnerModel': ( 'base_model.html#savebarlowlearnermodel',
                                                                                     'base_rbt/base_model.py'),
                                     'base_rbt.base_model.SaveBarlowLearnerModel.__init__': ( 'base_model.html#savebarlowlearnermodel.__init__',
                                                                                              'base_rbt/base_model.py'),
                                     'base_rbt.base_model.SaveBarlowLearnerModel.after_fit': ( 'base_model.html#savebarlowlearnermodel.after_fit',
                                                                                               'base_rbt/base_model.py'),
                                     'base_rbt.base_model.create_barlow_twins_model': ( 'base_model.html#create_barlow_twins_model',
                                                                                        'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_BT_batch_augs': ( 'base_model.html#get_bt_batch_augs',
                                                                                'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_barlow_twins_aug_pipelines': ( 'base_model.html#get_barlow_twins_aug_pipelines',
                                                                                             'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_bt_aug_pipelines': ( 'base_model.html#get_bt_aug_pipelines',
                                                                                   'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_bt_cifar10_aug_pipelines': ( 'base_model.html#get_bt_cifar10_aug_pipelines',
                                                                                           'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_bt_dermnet_aug_pipelines': ( 'base_model.html#get_bt_dermnet_aug_pipelines',
                                                                                           'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_bt_experiment_state': ( 'base_model.html#get_bt_experiment_state',
                                                                                      'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_bt_imagenet_aug_pipelines': ( 'base_model.html#get_bt_imagenet_aug_pipelines',
                                                                                            'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_multi_aug_pipelines': ( 'base_model.html#get_multi_aug_pipelines',
                                                                                      'base_rbt/base_model.py'),
                                     'base_rbt.base_model.get_ssl_dls': ('base_model.html#get_ssl_dls', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.helper_get_bt_augs': ( 'base_model.html#helper_get_bt_augs',
                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.lf_bt': ('base_model.html#lf_bt', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.lf_bt_fun': ('base_model.html#lf_bt_fun', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.lf_bt_group_norm_sparse': ( 'base_model.html#lf_bt_group_norm_sparse',
                                                                                      'base_rbt/base_model.py'),
                                     'base_rbt.base_model.lf_bt_group_sparse': ( 'base_model.html#lf_bt_group_sparse',
                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.lf_bt_indiv_sparse': ( 'base_model.html#lf_bt_indiv_sparse',
                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.lf_bt_proj_group_sparse': ( 'base_model.html#lf_bt_proj_group_sparse',
                                                                                      'base_rbt/base_model.py'),
                                     'base_rbt.base_model.load_barlow_model': ( 'base_model.html#load_barlow_model',
                                                                                'base_rbt/base_model.py'),
                                     'base_rbt.base_model.main_bt_experiment': ( 'base_model.html#main_bt_experiment',
                                                                                 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.main_bt_train': ('base_model.html#main_bt_train', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.my_splitter_bt': ('base_model.html#my_splitter_bt', 'base_rbt/base_model.py'),
                                     'base_rbt.base_model.show_bt_batch': ('base_model.html#show_bt_batch', 'base_rbt/base_model.py')},
            'base_rbt.base_supervised': { 'base_rbt.base_supervised.LM': ('base_supervised.html#lm', 'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LM.__init__': ( 'base_supervised.html#lm.__init__',
                                                                                    'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LM.forward': ( 'base_supervised.html#lm.forward',
                                                                                   'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LinearBt': ( 'base_supervised.html#linearbt',
                                                                                 'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LinearBt.__init__': ( 'base_supervised.html#linearbt.__init__',
                                                                                          'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LinearBt.before_batch': ( 'base_supervised.html#linearbt.before_batch',
                                                                                              'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LinearBt.before_fit': ( 'base_supervised.html#linearbt.before_fit',
                                                                                            'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LinearBt.lf': ( 'base_supervised.html#linearbt.lf',
                                                                                    'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.LinearBt.show': ( 'base_supervised.html#linearbt.show',
                                                                                      'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SaveSupLearnerModel': ( 'base_supervised.html#savesuplearnermodel',
                                                                                            'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SaveSupLearnerModel.__init__': ( 'base_supervised.html#savesuplearnermodel.__init__',
                                                                                                     'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SaveSupLearnerModel.after_fit': ( 'base_supervised.html#savesuplearnermodel.after_fit',
                                                                                                      'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning': ( 'base_supervised.html#supervisedlearning',
                                                                                           'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning.__init__': ( 'base_supervised.html#supervisedlearning.__init__',
                                                                                                    'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning._get_training_cbs': ( 'base_supervised.html#supervisedlearning._get_training_cbs',
                                                                                                             'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning.linear_evaluation': ( 'base_supervised.html#supervisedlearning.linear_evaluation',
                                                                                                             'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning.semi_supervised': ( 'base_supervised.html#supervisedlearning.semi_supervised',
                                                                                                           'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning.setup_learn': ( 'base_supervised.html#supervisedlearning.setup_learn',
                                                                                                       'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning.supervised_learning': ( 'base_supervised.html#supervisedlearning.supervised_learning',
                                                                                                               'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.SupervisedLearning.train': ( 'base_supervised.html#supervisedlearning.train',
                                                                                                 'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.check_run_exists': ( 'base_supervised.html#check_run_exists',
                                                                                         'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.encoder_head_splitter': ( 'base_supervised.html#encoder_head_splitter',
                                                                                              'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.get_encoder': ( 'base_supervised.html#get_encoder',
                                                                                    'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.get_linear_batch_augs': ( 'base_supervised.html#get_linear_batch_augs',
                                                                                              'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.get_supervised_aug_pipelines': ( 'base_supervised.html#get_supervised_aug_pipelines',
                                                                                                     'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.get_supervised_cifar10_augmentations': ( 'base_supervised.html#get_supervised_cifar10_augmentations',
                                                                                                             'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.get_supervised_dls': ( 'base_supervised.html#get_supervised_dls',
                                                                                           'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.get_supervised_isic_augmentations': ( 'base_supervised.html#get_supervised_isic_augmentations',
                                                                                                          'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.load_sup_model': ( 'base_supervised.html#load_sup_model',
                                                                                       'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.main_fine_tune_isic': ( 'base_supervised.html#main_fine_tune_isic',
                                                                                            'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.main_sup_experiment': ( 'base_supervised.html#main_sup_experiment',
                                                                                            'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.main_sup_train': ( 'base_supervised.html#main_sup_train',
                                                                                       'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.save_metrics': ( 'base_supervised.html#save_metrics',
                                                                                     'base_rbt/base_supervised.py'),
                                          'base_rbt.base_supervised.show_linear_batch': ( 'base_supervised.html#show_linear_batch',
                                                                                          'base_rbt/base_supervised.py')},
            'base_rbt.cifar10_dataloading': { 'base_rbt.cifar10_dataloading.get_bt_cifar10_train_dls': ( 'cifar10_dataloading.html#get_bt_cifar10_train_dls',
                                                                                                         'base_rbt/cifar10_dataloading.py'),
                                              'base_rbt.cifar10_dataloading.get_supervised_cifar10_test_dls': ( 'cifar10_dataloading.html#get_supervised_cifar10_test_dls',
                                                                                                                'base_rbt/cifar10_dataloading.py'),
                                              'base_rbt.cifar10_dataloading.get_supervised_cifar10_train_dls': ( 'cifar10_dataloading.html#get_supervised_cifar10_train_dls',
                                                                                                                 'base_rbt/cifar10_dataloading.py'),
                                              'base_rbt.cifar10_dataloading.label_func': ( 'cifar10_dataloading.html#label_func',
                                                                                           'base_rbt/cifar10_dataloading.py'),
                                              'base_rbt.cifar10_dataloading.load_cifar10_test_data': ( 'cifar10_dataloading.html#load_cifar10_test_data',
                                                                                                       'base_rbt/cifar10_dataloading.py'),
                                              'base_rbt.cifar10_dataloading.load_cifar10_train_data': ( 'cifar10_dataloading.html#load_cifar10_train_data',
                                                                                                        'base_rbt/cifar10_dataloading.py')},
            'base_rbt.dataloading': { 'base_rbt.dataloading.get_bt_train_dls': ( 'dataloading.html#get_bt_train_dls',
                                                                                 'base_rbt/dataloading.py'),
                                      'base_rbt.dataloading.label_func': ('dataloading.html#label_func', 'base_rbt/dataloading.py')},
            'base_rbt.dermnet_dataloading': { 'base_rbt.dermnet_dataloading.get_bt_dermnet_train_dls': ( 'dermnet_dataloading.html#get_bt_dermnet_train_dls',
                                                                                                         'base_rbt/dermnet_dataloading.py'),
                                              'base_rbt.dermnet_dataloading.label_func': ( 'dermnet_dataloading.html#label_func',
                                                                                           'base_rbt/dermnet_dataloading.py')},
            'base_rbt.index': {'base_rbt.index.BarlowTwins.lf': ('index.html#barlowtwins.lf', 'base_rbt/index.py')},
            'base_rbt.isic_dataloading': { 'base_rbt.isic_dataloading.extract_id': ( 'isic_dataloading.html#extract_id',
                                                                                     'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_class_from_id': ( 'isic_dataloading.html#get_class_from_id',
                                                                                            'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_data': ( 'cancer_dataloading.html#get_data',
                                                                                   'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_difference': ( 'isic_dataloading.html#get_difference',
                                                                                         'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_fnames': ( 'cancer_dataloading.html#get_fnames',
                                                                                     'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_label_func_dict': ( 'isic_dataloading.html#get_label_func_dict',
                                                                                              'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_pct_dataset': ( 'cancer_dataloading.html#get_pct_dataset',
                                                                                          'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_supervised_isic_test_dls': ( 'isic_dataloading.html#get_supervised_isic_test_dls',
                                                                                                       'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.get_supervised_isic_train_dls': ( 'isic_dataloading.html#get_supervised_isic_train_dls',
                                                                                                        'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.is_colab': ( 'cancer_dataloading.html#is_colab',
                                                                                   'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.load_data': ( 'cancer_dataloading.html#load_data',
                                                                                    'base_rbt/isic_dataloading.py'),
                                           'base_rbt.isic_dataloading.process_path': ( 'isic_dataloading.html#process_path',
                                                                                       'base_rbt/isic_dataloading.py')},
            'base_rbt.metrics': { 'base_rbt.metrics.Auc_Dict': ('metrics.html#auc_dict', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.Mean_Report': ('metrics.html#mean_report', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.Mean_Results': ('metrics.html#mean_results', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.Pr_Dict': ('metrics.html#pr_dict', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics._plot_precision_recall': ('metrics.html#_plot_precision_recall', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics._plot_roc': ('metrics.html#_plot_roc', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.classification_report_wrapper': ( 'metrics.html#classification_report_wrapper',
                                                                                      'base_rbt/metrics.py'),
                                  'base_rbt.metrics.format_classification_report': ( 'metrics.html#format_classification_report',
                                                                                     'base_rbt/metrics.py'),
                                  'base_rbt.metrics.get_dls_metrics': ('metrics.html#get_dls_metrics', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.get_xval_metrics': ('metrics.html#get_xval_metrics', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.plot_pr': ('metrics.html#plot_pr', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.plot_roc': ('metrics.html#plot_roc', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.predict_ensemble': ('metrics.html#predict_ensemble', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.predict_model': ('metrics.html#predict_model', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.predict_whole_model': ('metrics.html#predict_whole_model', 'base_rbt/metrics.py'),
                                  'base_rbt.metrics.print_confusion_matrix': ( 'metrics.html#print_confusion_matrix',
                                                                               'base_rbt/metrics.py')},
            'base_rbt.utils': { 'base_rbt.utils.InterruptCallback': ('utils.html#interruptcallback', 'base_rbt/utils.py'),
                                'base_rbt.utils.InterruptCallback.__init__': ('utils.html#interruptcallback.__init__', 'base_rbt/utils.py'),
                                'base_rbt.utils.InterruptCallback.before_epoch': ( 'utils.html#interruptcallback.before_epoch',
                                                                                   'base_rbt/utils.py'),
                                'base_rbt.utils.SaveLearnerCheckpoint': ('utils.html#savelearnercheckpoint', 'base_rbt/utils.py'),
                                'base_rbt.utils.SaveLearnerCheckpoint.__init__': ( 'utils.html#savelearnercheckpoint.__init__',
                                                                                   'base_rbt/utils.py'),
                                'base_rbt.utils.SaveLearnerCheckpoint.after_epoch': ( 'utils.html#savelearnercheckpoint.after_epoch',
                                                                                      'base_rbt/utils.py'),
                                'base_rbt.utils._SmallRes': ('utils.html#_smallres', 'base_rbt/utils.py'),
                                'base_rbt.utils._SmallRes.__init__': ('utils.html#_smallres.__init__', 'base_rbt/utils.py'),
                                'base_rbt.utils._SmallRes.forward': ('utils.html#_smallres.forward', 'base_rbt/utils.py'),
                                'base_rbt.utils.adjust_config_with_derived_values': ( 'utils.html#adjust_config_with_derived_values',
                                                                                      'base_rbt/utils.py'),
                                'base_rbt.utils.create_experiment_directory': ( 'utils.html#create_experiment_directory',
                                                                                'base_rbt/utils.py'),
                                'base_rbt.utils.extract_number': ('utils.html#extract_number', 'base_rbt/utils.py'),
                                'base_rbt.utils.find_largest_file': ('utils.html#find_largest_file', 'base_rbt/utils.py'),
                                'base_rbt.utils.generate_config_hash': ('utils.html#generate_config_hash', 'base_rbt/utils.py'),
                                'base_rbt.utils.get_highest_num_path': ('utils.html#get_highest_num_path', 'base_rbt/utils.py'),
                                'base_rbt.utils.get_latest_commit_hash': ('utils.html#get_latest_commit_hash', 'base_rbt/utils.py'),
                                'base_rbt.utils.get_resnet_encoder': ('utils.html#get_resnet_encoder', 'base_rbt/utils.py'),
                                'base_rbt.utils.load_config': ('utils.html#load_config', 'base_rbt/utils.py'),
                                'base_rbt.utils.load_dict_from_gdrive': ('utils.html#load_dict_from_gdrive', 'base_rbt/utils.py'),
                                'base_rbt.utils.pretty_print_ns': ('utils.html#pretty_print_ns', 'base_rbt/utils.py'),
                                'base_rbt.utils.resnet_arch_to_encoder': ('utils.html#resnet_arch_to_encoder', 'base_rbt/utils.py'),
                                'base_rbt.utils.return_max_filename': ('utils.html#return_max_filename', 'base_rbt/utils.py'),
                                'base_rbt.utils.save_configuration': ('utils.html#save_configuration', 'base_rbt/utils.py'),
                                'base_rbt.utils.save_dict_to_gdrive': ('utils.html#save_dict_to_gdrive', 'base_rbt/utils.py'),
                                'base_rbt.utils.save_metadata_file': ('utils.html#save_metadata_file', 'base_rbt/utils.py'),
                                'base_rbt.utils.seed_everything': ('utils.html#seed_everything', 'base_rbt/utils.py'),
                                'base_rbt.utils.setup_experiment': ('utils.html#setup_experiment', 'base_rbt/utils.py'),
                                'base_rbt.utils.test_grad_off': ('utils.html#test_grad_off', 'base_rbt/utils.py'),
                                'base_rbt.utils.test_grad_on': ('utils.html#test_grad_on', 'base_rbt/utils.py'),
                                'base_rbt.utils.update_experiment_index': ('utils.html#update_experiment_index', 'base_rbt/utils.py')}}}
