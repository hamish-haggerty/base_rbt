"""How to load dermnet datasets, for SSL (possibly later: and supervised learning)"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/ufes_dataloading.ipynb.

# %% auto 0
__all__ = ['label_func', 'get_bt_ufes_train_dls']

# %% ../nbs/ufes_dataloading.ipynb 3
import torch
from fastai.vision.all import *
# from self_supervised.augmentations import *
# from self_supervised.layers import *
from .utils import *

# %% ../nbs/ufes_dataloading.ipynb 4
def label_func(x):
    # Example label function, modify it according to your dataset's structure
    return ''

def get_bt_ufes_train_dls(bs,size,device,pct_dataset=1.0,num_workers=12):
    
    #NOTE: assume unzip like:
    #!mkdir -p "/content/PAD_UFES_20_resized"
    #!unzip -q -o "/content/drive/My Drive/PAD_UFES_20_resized.zip" -d "/content/PAD_UFES_20_resized"


    fnames=[]
    for i in [1,2,3]:
        fnames+=get_image_files(f"/content/PAD_UFES_20_resized/imgs_part_{i}/imgs_part_{i}")
    
    n = int(len(fnames)*pct_dataset)


    # Create the combined DataLoader
    dls = ImageDataLoaders.from_path_func(
        path=".",
        fnames=fnames[0:n],
        label_func=label_func,
        bs=bs,
        valid_pct=0,
        device=device,
        num_workers=num_workers*(device=='cuda')
                                          )

    return dls
